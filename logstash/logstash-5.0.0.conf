# Name
#	logstash-5.0.0.conf
#
# Description
#   package for logstash
#
# Installation
#   apc package delete /apcera/pkg/packages::logstash-5.0.0 --batch
#   apc package build logstash-5.0.0.conf --batch
#

name:      "logstash-5.0.0"
version:   "5.0.0"
namespace: "/apcera/pkg/packages"

sources [
  { url: "https://artifacts.elastic.co/downloads/logstash/logstash-5.0.0.tar.gz",
    sha1: "a2517d10229eba1e706bbf3aa3e48ac15f2f19aa" },
]

depends  [ { os: "ubuntu-14.04" },
           { runtime: "java-1.8"} ]
	   
provides      [ { package: "logstash" },
                { package: "logstash-5" },
                { package: "logstash-5.0" },
                { package: "logstash-5.0.0" }]

environment {
	"PATH": "/opt/apcera/logstash/bin:$PATH"
			}

cleanup [
          "/root"
        ]

build (
	mkdir -p /opt/apcera
	tar -C /opt/apcera/ -xzf logstash-5.0.0.tar.gz

	cd /opt/apcera/
	ln -s logstash-5.0.0 logstash
	cd logstash
	
	# Install some plugins
	#
	./bin/logstash-plugin install logstash-output-kafka

	# Update the geo ip data
	#
	echo "This sample uses GeoLite2 data created by MaxMind, available from"
	echo "http://www.maxmind.com"
	
	curl -s -O "http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz"
	gunzip GeoLite2-City.mmdb.gz
	rm -f GeoLite2-City.mmdb.gz
	
	cd -
	chown -R runner:runner logstash-5.0.0/
)
